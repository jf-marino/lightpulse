{"dependencies":[{"name":"./typedArray","loc":{"line":3,"column":27}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\n\nconst typedArray = require('./typedArray')\n\nfunction describe (props) {\n  return new DescribedArrayBufferValue(Object.assign({\n    // Assume at least Node.js 4.5.0, which introduces Buffer.from()\n    buffer: Buffer.from(props.value),\n    // Set isArray and isList so the property recursor excludes the byte accessors\n    isArray: true,\n    isList: true\n  }, props))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedArrayBufferValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('ArrayBufferValue')\nexports.tag = tag\n\n// ArrayBuffers can be represented as regular Buffers, allowing them to be\n// treated as TypedArrays for the purposes of this package.\nclass ArrayBufferValue extends typedArray.TypedArrayValue {}\nObject.defineProperty(ArrayBufferValue.prototype, 'tag', { value: tag })\n\nconst DescribedArrayBufferValue = typedArray.DescribedMixin(ArrayBufferValue)\nconst DeserializedArrayBufferValue = typedArray.DeserializedMixin(ArrayBufferValue)\n"},"hash":"dbeed7949cc093d6b9e2dd985be84173"}