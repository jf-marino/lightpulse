{"dependencies":[{"name":"../recursorUtils","loc":{"line":3,"column":30}},{"name":"../primitiveValues/string","loc":{"line":4,"column":32}},{"name":"./object","loc":{"line":5,"column":23}}],"generated":{"js":"'use strict'\n\nconst recursorUtils = require('../recursorUtils')\nconst stringPrimitive = require('../primitiveValues/string').tag\nconst object = require('./object')\n\nfunction describe (props) {\n  return new DescribedBoxedValue(props)\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedBoxedValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('BoxedValue')\nexports.tag = tag\n\nclass BoxedValue extends object.ObjectValue {}\nObject.defineProperty(BoxedValue.prototype, 'tag', {value: tag})\n\nclass DescribedBoxedValue extends object.DescribedMixin(BoxedValue) {\n  constructor (props) {\n    super(props)\n    this.unboxed = props.unboxed\n  }\n\n  createListRecursor () {\n    return recursorUtils.NOOP_RECURSOR\n  }\n\n  createPropertyRecursor () {\n    if (this.unboxed.tag !== stringPrimitive) return super.createPropertyRecursor()\n\n    // Just so that createPropertyRecursor() skips the index-based character\n    // properties.\n    try {\n      this.isList = true\n      return super.createPropertyRecursor()\n    } finally {\n      this.isList = false\n    }\n  }\n\n  createRecursor () {\n    return recursorUtils.unshift(super.createRecursor(), this.unboxed)\n  }\n}\n\nconst DeserializedBoxedValue = object.DeserializedMixin(BoxedValue)\n"},"hash":"f429d94ac2958878e7aeeb57208631ae"}