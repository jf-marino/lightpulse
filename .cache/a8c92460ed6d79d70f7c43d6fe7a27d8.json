{"dependencies":[{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\nmodule.exports = function (object, filterFn) {\n\treturn cleanYamlObj(object, filterFn || defaultFilter, true, []);\n};\n\nfunction cleanYamlObj(object, filter, isRoot, seen) {\n\tif (object === undefined) {\n\t\treturn null;\n\t}\n\n\tif (typeof object === 'function') {\n\t\treturn object.toString();\n\t}\n\n\tif (Buffer.isBuffer(object)) {\n\t\treturn 'Buffer\\n' + object.toString('hex').split('')\n\t\t\t\t.reduce(function (set, c) {\n\t\t\t\t\tif (set.length && set[set.length - 1].length === 1) {\n\t\t\t\t\t\tset[set.length - 1] += c;\n\t\t\t\t\t\tif (set.length && set.length % 20 === 0) {\n\t\t\t\t\t\t\tset[set.length - 1] += '\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tset[set.length - 1] += ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tset.push(c);\n\t\t\t\t\t}\n\t\t\t\t\treturn set;\n\t\t\t\t}, []).join('').trim();\n\t}\n\n\tif (object && typeof object === 'object') {\n\t\tif (object instanceof RegExp) {\n\t\t\treturn object.toString();\n\t\t}\n\n\t\tseen = seen.concat([object]);\n\n\t\tvar isArray = Array.isArray(object);\n\n\t\t// Fill in any holes.  This means we lose expandos,\n\t\t// but we were gonna lose those anyway.\n\t\tif (isArray) {\n\t\t\tobject = Array.apply(null, object);\n\t\t}\n\n\t\tvar isError = object && typeof object === 'object' && object instanceof Error;\n\n\t\tvar set = isArray ? [] : {};\n\n\t\t// name is typically not an ownProperty on an Error\n\t\tif (isError && object.name && !object.hasOwnProperty('name') && filter('name', isRoot, object, set)) {\n\t\t\tsetProp('name', object, set, seen, filter);\n\t\t}\n\n\t\tvar keys = Object.getOwnPropertyNames(object);\n\t\treturn keys.reduce(function (set, k) {\n\t\t\t// magic property!\n\t\t\tif (isArray && k === 'length') {\n\t\t\t\treturn set;\n\t\t\t}\n\n\t\t\t// Don't dump massive EventEmitter and Domain\n\t\t\t// objects onto the output, that's never friendly.\n\t\t\tif (isError && /^domain/.test(k)) {\n\t\t\t\treturn set;\n\t\t\t}\n\n\t\t\tif (!filter(k, isRoot, object, set)) {\n\t\t\t\treturn set;\n\t\t\t}\n\n\t\t\tsetProp(k, object, set, seen, filter);\n\n\t\t\treturn set;\n\t\t}, set);\n\t}\n\n\treturn object;\n}\n\nfunction setProp(propName, source, target, seen, filter) {\n\tif (seen.indexOf(source[propName]) === -1) {\n\t\ttarget[propName] = cleanYamlObj(source[propName], filter, false, seen);\n\t} else {\n\t\ttarget[propName] = '[Circular]';\n\t}\n}\n\nfunction defaultFilter() {\n\treturn true;\n}\n"},"hash":"9ceaa3dbdf3ee2f92b62cadce49c7d6e"}