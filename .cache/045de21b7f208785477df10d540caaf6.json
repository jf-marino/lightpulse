{"dependencies":[{"name":"./typedArray","loc":{"line":3,"column":27}}],"generated":{"js":"'use strict'\n\nconst typedArray = require('./typedArray')\n\nfunction describe (props) {\n  return new DescribedDataViewValue(Object.assign({\n    buffer: typedArray.getBuffer(props.value),\n    // Set isArray and isList so the property recursor excludes the byte accessors\n    isArray: true,\n    isList: true\n  }, props))\n}\nexports.describe = describe\n\nfunction deserialize (state, recursor) {\n  return new DeserializedDataViewValue(state, recursor)\n}\nexports.deserialize = deserialize\n\nconst tag = Symbol('DataViewValue')\nexports.tag = tag\n\n// DataViews can be represented as regular Buffers, allowing them to be treated\n// as TypedArrays for the purposes of this package.\nclass DataViewValue extends typedArray.TypedArrayValue {}\nObject.defineProperty(DataViewValue.prototype, 'tag', { value: tag })\n\nconst DescribedDataViewValue = typedArray.DescribedMixin(DataViewValue)\nconst DeserializedDataViewValue = typedArray.DeserializedMixin(DataViewValue)\n"},"hash":"1c58d0dd038d42611065ad837522613f"}