{"dependencies":[{"name":"os","loc":{"line":2,"column":19}}],"generated":{"js":"'use strict';\nconst os = require('os');\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/babel-polyfill\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/;\nconst homeDir = os.homedir();\n\nmodule.exports = (stack, options) => {\n\toptions = Object.assign({pretty: false}, options);\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(x => {\n\t\t\tconst pathMatches = x.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (match.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar')) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(x => x.trim() !== '')\n\t\t.map(x => {\n\t\t\tif (options.pretty) {\n\t\t\t\treturn x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn x;\n\t\t})\n\t\t.join('\\n');\n};\n"},"hash":"b393585345d1d22b0ef4f4e70c758917"}