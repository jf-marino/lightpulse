{"dependencies":[],"generated":{"js":"'use strict';\n\nfunction validate(title, fn, metadata) {\n\tif (metadata.type !== 'test') {\n\t\tif (metadata.exclusive) {\n\t\t\treturn '`only` is only for tests and cannot be used with hooks';\n\t\t}\n\n\t\tif (metadata.failing) {\n\t\t\treturn '`failing` is only for tests and cannot be used with hooks';\n\t\t}\n\n\t\tif (metadata.todo) {\n\t\t\treturn '`todo` is only for documentation of future tests and cannot be used with hooks';\n\t\t}\n\t}\n\n\tif (metadata.todo) {\n\t\tif (typeof fn === 'function') {\n\t\t\treturn '`todo` tests are not allowed to have an implementation. Use ' +\n\t\t\t'`test.skip()` for tests with an implementation.';\n\t\t}\n\n\t\tif (typeof title !== 'string') {\n\t\t\treturn '`todo` tests require a title';\n\t\t}\n\n\t\tif (metadata.skipped || metadata.failing || metadata.exclusive) {\n\t\t\treturn '`todo` tests are just for documentation and cannot be used with `skip`, `only`, or `failing`';\n\t\t}\n\t} else if (typeof fn !== 'function') {\n\t\treturn 'Expected an implementation. Use `test.todo()` for tests without an implementation.';\n\t}\n\n\tif (metadata.always) {\n\t\tif (!(metadata.type === 'after' || metadata.type === 'afterEach')) {\n\t\t\treturn '`always` can only be used with `after` and `afterEach`';\n\t\t}\n\t}\n\n\tif (metadata.skipped && metadata.exclusive) {\n\t\treturn '`only` tests cannot be skipped';\n\t}\n\n\treturn null;\n}\n\nmodule.exports = validate;\n"},"hash":"056917287e1725c03a3819788e09b9f0"}