{"dependencies":[{"name":"concordance","loc":{"line":2,"column":28}},{"name":"dot-prop","loc":{"line":3,"column":24}},{"name":"babel-generator","loc":{"line":4,"column":25}},{"name":"./concordance-options","loc":{"line":5,"column":35}},{"name":"empower-core","loc":{"line":36,"column":25}}],"generated":{"js":"\"use strict\";const e=require(\"concordance\"),r=require(\"dot-prop\"),t=require(\"babel-generator\").default,s=require(\"./concordance-options\").default,o=[\"t.truthy(value, [message])\",\"t.falsy(value, [message])\",\"t.true(value, [message])\",\"t.false(value, [message])\",\"t.regex(contents, regex, [message])\",\"t.notRegex(contents, regex, [message])\"],a=e=>t(e,{quotes:\"single\"}).code,n=(e,t)=>r.get(e,t.replace(/\\//g,\".\")),u=r=>{const t=JSON.parse(r.source.ast);return r.args[0].events.map(r=>{const o=n(t,r.espath);return[a(o),e.format(r.value,s)]}).reverse()},c=(e,r,t)=>{return require(\"empower-core\")(t,{destructive:!0,onError(e){const t=e.error;e.powerAssertContext&&(t.statements=u(e.powerAssertContext)),r(this,t)},onSuccess(){e(this)},patterns:o,bindReceiver:!1})};module.exports=c;"},"hash":"5f59c93986896d22595e1992bf488467"}